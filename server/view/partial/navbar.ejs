<style>
	* { font-family: 'Open Sans', Arial, Helvetica, sans-serif; }

	.navbar {
		width: 100%;
		min-height: var(--navbar-height, 3em);
		max-height: var(--navbar-height, 3em);
		background-color: var(--primary-color, #555);
		box-shadow: 0px 2px 5px -3px #000000;
		z-index: 100;
	}

	.navbar a {
		float: left;
		padding: 0.75rem;
		color: white;
		text-decoration: none;
		font-size: 1rem;
		text-transform: uppercase;
    	letter-spacing: 1.1px;
	}

	.navbar a:hover {
		background-color: var(--color-primary-darker, #3b3b3b);
	}

	.navbar a.active {
		background-color: var(--accent-color, #04AA6D);
		color: var(--color-primary-darkest, #3b3b3b);
		font-weight: bold;
	}

	.navbar-menu {
		position: absolute;
		width: var(--navbar-height, 3em);
		height: var(--navbar-height, 3em);
		right: 0;
		top: 0;
		padding-top: calc(0.25 * var(--navbar-height, 3em));
		padding-left: calc(0.166666 * var(--navbar-height, 3em));
		overflow: hidden;
		cursor: pointer;
		display: none;
	}

	.navbar-menu span
	{
		display: block;
		width: calc(0.6666 * var(--navbar-height, 3em));
		height: calc(0.083333 * var(--navbar-height, 3em));
		margin-bottom: calc(0.116666667 * var(--navbar-height, 3em));
		position: relative;
		background-color: var(--color-primary-lighter);
		border-radius: calc(0.1 * var(--navbar-height, 3em));
		z-index: 1;
	}

	.navbar-menu:hover {
		background-color: var(--color-primary-darker, #3b3b3b);
	}

	.navbar a[href="/sign-out"] {
		float: right;
	}

	@media screen and (max-width: 550px) {

		body {
			padding-top: var(--navbar-height, 3em);
		}

		body.navbar-open main {
			transition : filter 100ms linear;
			filter: blur(0.5em);
			pointer-events: none;
		}

		.navbar {
			position: absolute;
			top: 0;
			left: 0;
			min-height: var(--navbar-height, 3em);
			max-height: var(--navbar-height, 3em);
			transition: max-height 0ms linear;
			overflow: hidden;
			padding-top: var(--navbar-height, 3em);
		}

		.navbar a {
			float: none;
			display: block;
		}

		body.navbar-open .navbar {
			max-height: 50vh;
			transition: max-height 100ms linear;
		}

		body.navbar-open .navbar a {
			display: block;
		}

		body.navbar-open .navbar a[hidden], .navbar a[hidden] {
			display: none;
		}

		.navbar-menu {
			display: block;
		}

		.navbar a[href="/sign-out"] {
			float: none;
		}
	}
</style>
<script src="/component/a-link.js" type="module"></script>
<nav class="navbar">
	<a is="a-link" hidden href="/my-feeds">My Feeds</a>
	<a is="a-link" href="/explore">Explore</a>
	<a is="a-link" hidden href="/create">Create</a>
	<a is="a-link" hidden href="/sign-in">Sign In</a>
	<a is="a-link" hidden href="/settings">Settings</a>
	<a is="a-link" hidden href="/sign-out">Sign Out</a>
	<div class="navbar-menu">
		<span></span>
		<span></span>
		<span></span>
	</div>
</nav>
<script type="module">
	(() => {
		const isSignedIn = document
			.cookie
			.split(';')
			.map(kv => kv.trim())
			.includes('signed-in=true');

		if (isSignedIn) {
			document
				.querySelectorAll('[href="/my-feeds"], [href="/create"], [href="/settings"], [href="/sign-out"]')
				.forEach(element => element.removeAttribute('hidden', null))
		} else {
			document
				.querySelectorAll('[href="/sign-in"]')
				.forEach(element => element.removeAttribute('hidden', null))
		}

		const path = window.location.pathname;
		const navbar = document.querySelector('.navbar');
		const body = document.body;
		const links = Array
			.from(document.querySelectorAll('.navbar a'))
			.sort((a, b) => { 
				if (a.pathname.length < b.pathname.length) { return 1 }
				if (a.pathname.length == b.pathname.length && a.pathname > b.pathname) { return 1 }
				return -1;
			});


		const onNavigationRequested = (e) => {
			links.forEach(link => link.classList.remove('active'));
			let link = e.target;
			const main = document.querySelector('main');
			const loader = document.querySelector('.page-loader');

			if (link instanceof EventTarget && !(link instanceof HTMLAnchorElement)) { link = e.detail.target; }
			if (link) { link.classList.add('active'); }
			
			if (body) { body.classList.remove('navbar-open'); }
			if (main) { main.classList.add('hidden'); }
			if (loader) { loader.classList.remove('hidden'); }
		};
		links.forEach(link => link.addEventListener('click', onNavigationRequested));
		window.customElements.whenDefined('a-link').then(() => {
			const ALink = customElements.get('a-link');
			ALink.GlobalEvents.addEventListener(ALink.GlobalEvents.EventNames.NAVIGATION_REQUESTED, onNavigationRequested);
		});

		document
			.querySelector('.navbar-menu')
			.addEventListener('click', (e) => body.classList.toggle('navbar-open'));

		body.addEventListener('click', (e) => body.classList.remove('navbar-open'));
		navbar.addEventListener('click', (e) => e.cancelBubble = true);

		for (let link of links) {
			if (path.includes(link.pathname)) {
				link.classList.add('active');
				return;
			}
		}

		document
			.querySelector('.navbar a')
			.classList
			.add('active');
	})();
</script>
